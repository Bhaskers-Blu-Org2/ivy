; benchmark generated from python API
(set-info :status unknown)
(declare-sort client)
 (declare-sort server)
 (declare-fun |__fml:y| () server)
(declare-fun |__fml:x| () client)
(declare-fun @S () server)
(declare-fun @C () client)
(declare-fun __link (client server) Bool)
(declare-fun __ts0_b () Bool)
(declare-fun link (client server) Bool)
(declare-fun __semaphore (server) Bool)
(declare-fun semaphore (server) Bool)
(declare-fun __ts0_a () Bool)
(assert
 (let (($x648 (forall ((|V0:client| client) (|V1:server| server) )(let (($x29 (__link |V0:client| |V1:server|)))
 (let (($x27 (= |V1:server| |__fml:y|)))
 (let (($x24 (and (= |V0:client| |__fml:x|) $x27)))
 (let (($x22 (link |V0:client| |V1:server|)))
 (= $x22 (ite __ts0_b (ite $x24 or $x29) (ite $x24 and $x29))))))))
 ))
 (let (($x682 (forall ((|V0:server| server) )(let (($x467 (ite __ts0_b (ite (and (= |V0:server| |__fml:y|)) and (__semaphore |V0:server|)) (ite (and (= |V0:server| |__fml:y|)) or (__semaphore |V0:server|)))))
 (let (($x40 (semaphore |V0:server|)))
 (= $x40 $x467))))
 ))
 (let (($x297 (forall ((|C:client| client) (|S:server| server) )(not (and (__semaphore |S:server|) (__link |C:client| |S:server|))))
 ))
 (let (($x10 (forall ((|X:client| client) (|Y:server| server) (|Z:client| client) )(not (and (not (= |X:client| |Z:client|)) (__link |X:client| |Y:server|) (__link |Z:client| |Y:server|))))
 ))
 (and $x10 $x297 (or __ts0_a __ts0_b) (or (not __ts0_a) (__semaphore |__fml:y|)) (or (not __ts0_b) (__link |__fml:x| |__fml:y|)) $x682 $x648))))))
(assert
 (and (semaphore @S) (link @C @S)))
(check-sat)
