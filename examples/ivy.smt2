; benchmark generated from python API
(set-info :status unknown)
(declare-sort s)
 (declare-sort elem)
 (declare-sort s.impl.index)
 (declare-sort s.impl.arr)
 (declare-fun |__fml:s| () s)
(declare-fun |__new_fml:s| () s)
(declare-fun |0:elem| () elem)
(declare-fun |__new_fml:y| () elem)
(declare-fun |0:s.impl.index| () s.impl.index)
(declare-fun |__new_fml:s_a| () s.impl.index)
(declare-fun s.impl.repr (s) s.impl.arr)
(declare-fun s.impl.arr.end (s.impl.arr) s.impl.index)
(declare-fun |<:s.impl.index| (s.impl.index s.impl.index) Bool)
(declare-fun s.impl.index.succ (s.impl.index s.impl.index) Bool)
(assert
 (let (($x78 (forall ((|X:s| s) (|Y:s| s) )(=> (and (= (s.impl.repr |X:s|) (s.impl.repr |Y:s|))) (= |X:s| |Y:s|)))
 ))
 (let (($x74 (forall ((|X:s.impl.arr| s.impl.arr) )(or (= (s.impl.arr.end |X:s.impl.arr|) |0:s.impl.index|) (|<:s.impl.index| |0:s.impl.index| (s.impl.arr.end |X:s.impl.arr|))))
 ))
 (let (($x90 (forall ((|X:s.impl.index| s.impl.index) )(or (= |0:s.impl.index| |X:s.impl.index|) (|<:s.impl.index| |0:s.impl.index| |X:s.impl.index|)))
 ))
 (let (($x41 (forall ((|T:s.impl.index| s.impl.index) (|U:s.impl.index| s.impl.index) )(let (($x39 (|<:s.impl.index| |U:s.impl.index| |T:s.impl.index|)))
 (or (or (|<:s.impl.index| |T:s.impl.index| |U:s.impl.index|) (= |T:s.impl.index| |U:s.impl.index|)) $x39)))
 ))
 (let (($x32 (forall ((|T:s.impl.index| s.impl.index) (|U:s.impl.index| s.impl.index) )(not (and (|<:s.impl.index| |T:s.impl.index| |U:s.impl.index|) (|<:s.impl.index| |U:s.impl.index| |T:s.impl.index|))))
 ))
 (let (($x148 (forall ((|T:s.impl.index| s.impl.index) (|U:s.impl.index| s.impl.index) (|V:s.impl.index| s.impl.index) )(let (($x37 (|<:s.impl.index| |T:s.impl.index| |V:s.impl.index|)))
 (=> (and (|<:s.impl.index| |T:s.impl.index| |U:s.impl.index|) (|<:s.impl.index| |U:s.impl.index| |V:s.impl.index|)) $x37)))
 ))
 (let (($x63 (forall ((|X:s.impl.index| s.impl.index) (|Y:s.impl.index| s.impl.index) (|Z:s.impl.index| s.impl.index) )(let (($x37 (|<:s.impl.index| |X:s.impl.index| |Z:s.impl.index|)))
 (let (($x86 (and $x37 (not (and (|<:s.impl.index| |X:s.impl.index| |Y:s.impl.index|) (|<:s.impl.index| |Y:s.impl.index| |Z:s.impl.index|))))))
 (=> (s.impl.index.succ |X:s.impl.index| |Z:s.impl.index|) $x86))))
 ))
 (let (($x360 (or (= |0:s.impl.index| |__new_fml:s_a|) (|<:s.impl.index| |0:s.impl.index| |__new_fml:s_a|))))
 (and (not $x360) $x63 $x148 $x32 $x41 $x90 $x74 $x78 (= |__new_fml:s_a| |0:s.impl.index|) (= |__new_fml:y| |0:elem|) (= |__new_fml:s| |__fml:s|)))))))))))
(assert
 (and (not or)))
(check-sat)
