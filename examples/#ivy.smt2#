; benchmark generated from python API
(set-info :status unknown)
(declare-sort elem)
(declare-sort s.arr.t)
(declare-sort index.t)
(declare-fun |__fml:e| () elem)
(declare-fun |__fml:s| () s.arr.t)
(declare-fun s.arr.end (s.arr.t) index.t)
(declare-fun |__ts0__new_fml:x| () index.t)
(declare-fun |__ts0__new_loc:1| () s.arr.t)
(declare-fun |__new_fml:s| () s.arr.t)
(declare-fun |__new_fml:a_a| () s.arr.t)
(declare-fun |__fml:y| () index.t)
(declare-fun |__ts0__new_loc:0| () index.t)
(declare-fun |__ts0__new_fml:s_a| () index.t)
(declare-fun |__ts0__new_fml:v| () elem)
(declare-fun |__ts0__m_fml:a_a| () s.arr.t)
(declare-fun s.arr.value (s.arr.t index.t) elem)
(declare-fun |0:index.t| () index.t)
(declare-fun __s.arr.t$1 () s.arr.t)
(declare-fun __s.arr.t$0 () s.arr.t)
(declare-fun __elem$0 () elem)
(declare-fun __index.t$2 () index.t)
(declare-fun __index.t$1 () index.t)
(declare-fun __index.t$0 () index.t)
(declare-fun s.contains (s.arr.t elem) Bool)
(declare-fun __ts0_a () Bool)
(declare-fun |<:index.t| (index.t index.t) Bool)
(declare-fun s.valid (s.arr.t) Bool)
(declare-fun index.succ (index.t index.t) Bool)
(assert
 (let ((?x75 (s.arr.end |__fml:s|)))
 (let (($x213 (= |__ts0__new_fml:x| ?x75)))
 (let ((?x99 (ite __ts0_a |__ts0__new_loc:1| |__fml:s|)))
 (let (($x411 (= |__new_fml:s| ?x99)))
 (let (($x238 (= |__ts0__new_loc:1| |__new_fml:a_a|)))
 (let (($x341 (= |__ts0__new_loc:0| |__fml:y|)))
 (let (($x94 (= |__ts0__new_fml:s_a| |__ts0__new_loc:0|)))
 (let (($x215 (= |__ts0__new_fml:v| |__fml:e|)))
 (let (($x245 (= |__ts0__m_fml:a_a| |__fml:s|)))
 (let (($x492 (forall ((|X:s.arr.t| s.arr.t) )(let (($x121 (forall ((|Z:index.t| index.t) (|Y:index.t| index.t) )(let (($x174 (= |Y:index.t| |Z:index.t|)))
 (let (($x20 (|<:index.t| |0:index.t| |Z:index.t|)))
 (let (($x76 (or (= |0:index.t| |Z:index.t|) $x20)))
 (let (($x255 (and (or (= |0:index.t| |Y:index.t|) (|<:index.t| |0:index.t| |Y:index.t|)) (|<:index.t| |Y:index.t| (s.arr.end |X:s.arr.t|)) $x76 (|<:index.t| |Z:index.t| (s.arr.end |X:s.arr.t|)) (= (s.arr.value |X:s.arr.t| |Y:index.t|) (s.arr.value |X:s.arr.t| |Z:index.t|)))))
 (=> $x255 $x174))))))
 ))
 (= (s.valid |X:s.arr.t|) $x121)))
 ))
 (let (($x210 (forall ((|X:s.arr.t| s.arr.t) )(or (= (s.arr.end |X:s.arr.t|) |0:index.t|) (|<:index.t| |0:index.t| (s.arr.end |X:s.arr.t|))))
 ))
 (let (($x302 (forall ((|T:index.t| index.t) (|U:index.t| index.t) )(let (($x29 (|<:index.t| |U:index.t| |T:index.t|)))
 (let (($x184 (|<:index.t| |T:index.t| |U:index.t|)))
 (or $x184 $x29 (= |T:index.t| |U:index.t|)))))
 ))
 (let (($x105 (forall ((|T:index.t| index.t) (|U:index.t| index.t) )(not (and (|<:index.t| |T:index.t| |U:index.t|) (|<:index.t| |U:index.t| |T:index.t|))))
 ))
 (let (($x58 (forall ((|T:index.t| index.t) (|U:index.t| index.t) (|V:index.t| index.t) )(let (($x129 (|<:index.t| |T:index.t| |V:index.t|)))
 (=> (and (|<:index.t| |T:index.t| |U:index.t|) (|<:index.t| |U:index.t| |V:index.t|)) $x129)))
 ))
 (let (($x65 (forall ((|X:index.t| index.t) (|Y:index.t| index.t) (|Z:index.t| index.t) )(let (($x129 (|<:index.t| |X:index.t| |Z:index.t|)))
 (let (($x149 (index.succ |X:index.t| |Z:index.t|)))
 (=> $x149 (and $x129 (not (and (|<:index.t| |X:index.t| |Y:index.t|) (|<:index.t| |Y:index.t| |Z:index.t|))))))))
 ))
 (let (($x41 (forall ((|X:elem| elem) )(let (($x52 (s.contains |__new_fml:s| |X:elem|)))
 (= $x52 (or (s.contains |__fml:s| |X:elem|) (= |X:elem| |__fml:e|)))))
 ))
 (let (($x211 (forall ((|X:index.t| index.t) (|Y:index.t| index.t) )(let (($x51 (not __ts0_a)))
 (let (($x38 (or (= (s.arr.end |__ts0__m_fml:a_a|) |X:index.t|) (|<:index.t| (s.arr.end |__ts0__m_fml:a_a|) |X:index.t|))))
 (let (($x9 (=> (and $x38 (|<:index.t| |X:index.t| |__ts0__new_fml:s_a|)) (= (s.arr.value |__new_fml:a_a| |X:index.t|) |__ts0__new_fml:v|))))
 (let (($x352 (= (s.arr.value |__new_fml:a_a| |X:index.t|) (s.arr.value |__ts0__m_fml:a_a| |X:index.t|))))
 (let (($x20 (|<:index.t| |0:index.t| |X:index.t|)))
 (let (($x76 (or (= |0:index.t| |X:index.t|) $x20)))
 (let ((?x64 (s.arr.end |__new_fml:a_a|)))
 (let (($x72 (= ?x64 |__ts0__new_fml:s_a|)))
 (let (($x537 (index.succ |__ts0__new_fml:x| |__fml:y|)))
 (let (($x241 (|<:index.t| |__ts0__new_fml:x| |Y:index.t|)))
 (let (($x93 (|<:index.t| |__ts0__new_fml:x| |__fml:y|)))
 (let (($x97 (and $x93 (=> $x241 (or (= |__fml:y| |Y:index.t|) (|<:index.t| |__fml:y| |Y:index.t|))) $x537 $x72 (=> (and $x76 (|<:index.t| |X:index.t| (s.arr.end |__ts0__m_fml:a_a|))) $x352) $x9)))
 (or $x97 $x51))))))))))))))
 ))
 (and (s.valid |__fml:s|) $x211 $x41 (not (s.valid |__new_fml:s|)) $x65 $x58 $x105 $x302 $x210 $x492 $x245 $x215 $x94 $x341 $x238 $x411 $x213 (= __ts0_a (not (s.contains |__fml:s| |__fml:e|))))))))))))))))))))))
(assert
 and)
(assert
 (forall ((|Xs.arr.t:s.arr.t| s.arr.t) )(or (= |Xs.arr.t:s.arr.t| __s.arr.t$0) (= |Xs.arr.t:s.arr.t| __s.arr.t$1)))
 )
(assert
 (forall ((|Xelem:elem| elem) )(or (= |Xelem:elem| __elem$0)))
 )
(assert
 (forall ((|Xindex.t:index.t| index.t) )(or (= |Xindex.t:index.t| __index.t$0) (= |Xindex.t:index.t| __index.t$1) (= |Xindex.t:index.t| __index.t$2)))
)
(check-sat)
