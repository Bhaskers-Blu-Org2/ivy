Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CONJECTURE
    INSTANTIATE
    MINIMIZING
    FRESH
    INVARIANT
    RELY
    IMPLEMENTATION
    DERIVED
    INIT
    ACTION
    IMPORT
    SPECIFICATION
    ISOLATE
    MODULE
    VAR
    ENTRY
    BEFORE
    OF
    AFTER
    PROGRESS
    PROPERTY
    INTERPRET
    CARET
    FUNCTION
    ENSURES
    REQUIRE
    SOME
    DECREASES
    LABEL
    ASSUME
    WITH
    LET
    MODIFIES
    REQUIRES
    DOTS
    AROUND
    NAMED
    IMPLEMENT
    INCLUDE
    UPDATE
    MAXIMIZING
    MIXORD
    TEMPORAL
    LCB
    DELEGATE
    MIXIN
    WHILE
    DEFINITION
    SET
    APPLY
    EXTRACT
    TRUSTED
    SCHEMA
    GHOST
    PARAMS
    STATE
    NATIVEQUOTE
    MATCH
    OBJECT
    THUNK
    ENSURE
    ATTRIBUTE
    USING
    TYPE
    DOTDOTDOT
    ASSERT
    EXPORT
    NULL
    PARAMETER
    AXIOM
    RCB
    PROOF
    SEMI
    VARIANT
    PRIVATE
    INDIV
    ASSIGN
    AUTOINSTANCE
    MACRO
    ALIAS
    RELATION
    IN
    LOCAL
    CONCEPT
    FROM
    STRUCT
    SCENARIO
    RETURNS
    DESTRUCTOR
    CALL

Grammar

Rule 0     S' -> fmla
Rule 1     atype -> SYMBOL
Rule 2     atype -> atype DOT SYMBOL
Rule 3     atype -> THIS
Rule 4     appelem -> SYMBOL
Rule 5     appelem -> SYMBOL LPAREN terms RPAREN
Rule 6     var -> VARIABLE
Rule 7     var -> VARIABLE COLON atype
Rule 8     simplevar -> VARIABLE
Rule 9     simplevar -> VARIABLE COLON SYMBOL
Rule 10    term -> appelem
Rule 11    term -> OLD appelem
Rule 12    term -> term DOT appelem
Rule 13    aterm -> appelem
Rule 14    aterm -> aterm DOT appelem
Rule 15    term -> var
Rule 16    term -> term PLUS term
Rule 17    term -> term MINUS term
Rule 18    term -> term TIMES term
Rule 19    term -> term DIV term
Rule 20    term -> term IF fmla ELSE term
Rule 21    terms -> <empty>
Rule 22    terms -> term
Rule 23    terms -> terms COMMA term
Rule 24    term -> LPAREN term RPAREN
Rule 25    vars -> var
Rule 26    vars -> vars COMMA var
Rule 27    simplevars -> simplevar
Rule 28    simplevars -> simplevars COMMA simplevar
Rule 29    app -> SYMBOL
Rule 30    app -> SYMBOL LPAREN terms RPAREN
Rule 31    app -> term infix term
Rule 32    apps -> app
Rule 33    apps -> apps COMMA app
Rule 34    atom -> SYMBOL
Rule 35    atom -> SYMBOL LPAREN terms RPAREN
Rule 36    atoms -> atom
Rule 37    atoms -> atoms COMMA atom
Rule 38    lit -> atom
Rule 39    lit -> SYMBOL EQ SYMBOL
Rule 40    lit -> SYMBOL TILDAEQ SYMBOL
Rule 41    lit -> TILDA lit
Rule 42    relop -> EQ
Rule 43    relop -> LE
Rule 44    relop -> LT
Rule 45    relop -> GE
Rule 46    relop -> GT
Rule 47    relop -> PTO
Rule 48    infix -> PLUS
Rule 49    infix -> MINUS
Rule 50    infix -> TIMES
Rule 51    infix -> DIV
Rule 52    fmla -> term
Rule 53    term -> term EQ term
Rule 54    term -> term LE term
Rule 55    term -> term LT term
Rule 56    term -> term GE term
Rule 57    term -> term GT term
Rule 58    term -> term PTO term
Rule 59    term -> term TILDAEQ term
Rule 60    term -> TRUE
Rule 61    term -> FALSE
Rule 62    term -> TILDA term
Rule 63    term -> term AND term
Rule 64    term -> term OR term
Rule 65    term -> term ARROW term
Rule 66    term -> term IFF term
Rule 67    term -> FORALL simplevars DOT term
Rule 68    term -> EXISTS simplevars DOT term
Rule 69    term -> FORALL LPAREN vars RPAREN term
Rule 70    term -> EXISTS LPAREN vars RPAREN term
Rule 71    term -> GLOBALLY term
Rule 72    term -> EVENTUALLY term
Rule 73    term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
Rule 74    term -> DOLLAR SYMBOL DOT fmla
Rule 75    term -> term ISA atype

Terminals, with rules where they appear

ACTION               : 
AFTER                : 
ALIAS                : 
AND                  : 63
APPLY                : 
AROUND               : 
ARROW                : 65
ASSERT               : 
ASSIGN               : 
ASSUME               : 
ATTRIBUTE            : 
AUTOINSTANCE         : 
AXIOM                : 
BEFORE               : 
CALL                 : 
CARET                : 
COLON                : 7 9
COMMA                : 23 26 28 33 37
CONCEPT              : 
CONJECTURE           : 
DECREASES            : 
DEFINITION           : 
DELEGATE             : 
DERIVED              : 
DESTRUCTOR           : 
DIV                  : 19 51
DOLLAR               : 73 74
DOT                  : 2 12 14 67 68 73 74
DOTDOTDOT            : 
DOTS                 : 
ELSE                 : 20
ENSURE               : 
ENSURES              : 
ENTRY                : 
EQ                   : 39 42 53
EVENTUALLY           : 72
EXISTS               : 68 70
EXPORT               : 
EXTRACT              : 
FALSE                : 61
FORALL               : 67 69
FRESH                : 
FROM                 : 
FUNCTION             : 
GE                   : 45 56
GHOST                : 
GLOBALLY             : 71
GT                   : 46 57
IF                   : 20
IFF                  : 66
IMPLEMENT            : 
IMPLEMENTATION       : 
IMPORT               : 
IN                   : 
INCLUDE              : 
INDIV                : 
INIT                 : 
INSTANTIATE          : 
INTERPRET            : 
INVARIANT            : 
ISA                  : 75
ISOLATE              : 
LABEL                : 
LCB                  : 
LE                   : 43 54
LET                  : 
LOCAL                : 
LPAREN               : 5 24 30 35 69 70 73 73
LT                   : 44 55
MACRO                : 
MATCH                : 
MAXIMIZING           : 
MINIMIZING           : 
MINUS                : 17 49
MIXIN                : 
MIXORD               : 
MODIFIES             : 
MODULE               : 
NAMED                : 
NATIVEQUOTE          : 
NULL                 : 
OBJECT               : 
OF                   : 
OLD                  : 11
OR                   : 64
PARAMETER            : 
PARAMS               : 
PLUS                 : 16 48
PRIVATE              : 
PROGRESS             : 
PROOF                : 
PROPERTY             : 
PTO                  : 47 58
RCB                  : 
RELATION             : 
RELY                 : 
REQUIRE              : 
REQUIRES             : 
RETURNS              : 
RPAREN               : 5 24 30 35 69 70 73 73
SCENARIO             : 
SCHEMA               : 
SEMI                 : 
SET                  : 
SOME                 : 
SPECIFICATION        : 
STATE                : 
STRUCT               : 
SYMBOL               : 1 2 4 5 9 29 30 34 35 39 39 40 40 73 74
TEMPORAL             : 
THIS                 : 3
THUNK                : 
TILDA                : 41 62
TILDAEQ              : 40 59
TIMES                : 18 50
TRUE                 : 60
TRUSTED              : 
TYPE                 : 
UPDATE               : 
USING                : 
VAR                  : 
VARIABLE             : 6 7 8 9
VARIANT              : 
WHILE                : 
WITH                 : 
error                : 

Nonterminals, with rules where they appear

app                  : 32 33
appelem              : 10 11 12 13 14
apps                 : 33
aterm                : 14
atom                 : 36 37 38
atoms                : 37
atype                : 2 7 75
fmla                 : 20 73 74 0
infix                : 31
lit                  : 41
relop                : 
simplevar            : 27 28
simplevars           : 28 67 68 73
term                 : 12 16 16 17 17 18 18 19 19 20 20 22 23 24 31 31 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 62 63 63 64 64 65 65 66 66 67 68 69 70 71 72 75
terms                : 5 23 30 35 73
var                  : 15 25 26
vars                 : 26 69 70

Parsing method: LALR

state 0

    (0) S' -> . fmla
    (52) fmla -> . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 15
    fmla                           shift and go to state 7
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 1

    (4) appelem -> SYMBOL .
    (5) appelem -> SYMBOL . LPAREN terms RPAREN

    DOT             reduce using rule 4 (appelem -> SYMBOL .)
    PLUS            reduce using rule 4 (appelem -> SYMBOL .)
    MINUS           reduce using rule 4 (appelem -> SYMBOL .)
    TIMES           reduce using rule 4 (appelem -> SYMBOL .)
    DIV             reduce using rule 4 (appelem -> SYMBOL .)
    IF              reduce using rule 4 (appelem -> SYMBOL .)
    EQ              reduce using rule 4 (appelem -> SYMBOL .)
    LE              reduce using rule 4 (appelem -> SYMBOL .)
    LT              reduce using rule 4 (appelem -> SYMBOL .)
    GE              reduce using rule 4 (appelem -> SYMBOL .)
    GT              reduce using rule 4 (appelem -> SYMBOL .)
    PTO             reduce using rule 4 (appelem -> SYMBOL .)
    TILDAEQ         reduce using rule 4 (appelem -> SYMBOL .)
    AND             reduce using rule 4 (appelem -> SYMBOL .)
    OR              reduce using rule 4 (appelem -> SYMBOL .)
    ARROW           reduce using rule 4 (appelem -> SYMBOL .)
    IFF             reduce using rule 4 (appelem -> SYMBOL .)
    ISA             reduce using rule 4 (appelem -> SYMBOL .)
    $end            reduce using rule 4 (appelem -> SYMBOL .)
    RPAREN          reduce using rule 4 (appelem -> SYMBOL .)
    COMMA           reduce using rule 4 (appelem -> SYMBOL .)
    ELSE            reduce using rule 4 (appelem -> SYMBOL .)
    LPAREN          shift and go to state 17


state 2

    (71) term -> GLOBALLY . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 18
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 3

    (60) term -> TRUE .

    DOT             reduce using rule 60 (term -> TRUE .)
    PLUS            reduce using rule 60 (term -> TRUE .)
    MINUS           reduce using rule 60 (term -> TRUE .)
    TIMES           reduce using rule 60 (term -> TRUE .)
    DIV             reduce using rule 60 (term -> TRUE .)
    IF              reduce using rule 60 (term -> TRUE .)
    EQ              reduce using rule 60 (term -> TRUE .)
    LE              reduce using rule 60 (term -> TRUE .)
    LT              reduce using rule 60 (term -> TRUE .)
    GE              reduce using rule 60 (term -> TRUE .)
    GT              reduce using rule 60 (term -> TRUE .)
    PTO             reduce using rule 60 (term -> TRUE .)
    TILDAEQ         reduce using rule 60 (term -> TRUE .)
    AND             reduce using rule 60 (term -> TRUE .)
    OR              reduce using rule 60 (term -> TRUE .)
    ARROW           reduce using rule 60 (term -> TRUE .)
    IFF             reduce using rule 60 (term -> TRUE .)
    ISA             reduce using rule 60 (term -> TRUE .)
    $end            reduce using rule 60 (term -> TRUE .)
    RPAREN          reduce using rule 60 (term -> TRUE .)
    COMMA           reduce using rule 60 (term -> TRUE .)
    ELSE            reduce using rule 60 (term -> TRUE .)


state 4

    (10) term -> appelem .

    DOT             reduce using rule 10 (term -> appelem .)
    PLUS            reduce using rule 10 (term -> appelem .)
    MINUS           reduce using rule 10 (term -> appelem .)
    TIMES           reduce using rule 10 (term -> appelem .)
    DIV             reduce using rule 10 (term -> appelem .)
    IF              reduce using rule 10 (term -> appelem .)
    EQ              reduce using rule 10 (term -> appelem .)
    LE              reduce using rule 10 (term -> appelem .)
    LT              reduce using rule 10 (term -> appelem .)
    GE              reduce using rule 10 (term -> appelem .)
    GT              reduce using rule 10 (term -> appelem .)
    PTO             reduce using rule 10 (term -> appelem .)
    TILDAEQ         reduce using rule 10 (term -> appelem .)
    AND             reduce using rule 10 (term -> appelem .)
    OR              reduce using rule 10 (term -> appelem .)
    ARROW           reduce using rule 10 (term -> appelem .)
    IFF             reduce using rule 10 (term -> appelem .)
    ISA             reduce using rule 10 (term -> appelem .)
    $end            reduce using rule 10 (term -> appelem .)
    RPAREN          reduce using rule 10 (term -> appelem .)
    COMMA           reduce using rule 10 (term -> appelem .)
    ELSE            reduce using rule 10 (term -> appelem .)


state 5

    (11) term -> OLD . appelem
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN

    SYMBOL          shift and go to state 1

    appelem                        shift and go to state 19

state 6

    (62) term -> TILDA . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 20
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 7

    (0) S' -> fmla .



state 8

    (15) term -> var .

    DOT             reduce using rule 15 (term -> var .)
    PLUS            reduce using rule 15 (term -> var .)
    MINUS           reduce using rule 15 (term -> var .)
    TIMES           reduce using rule 15 (term -> var .)
    DIV             reduce using rule 15 (term -> var .)
    IF              reduce using rule 15 (term -> var .)
    EQ              reduce using rule 15 (term -> var .)
    LE              reduce using rule 15 (term -> var .)
    LT              reduce using rule 15 (term -> var .)
    GE              reduce using rule 15 (term -> var .)
    GT              reduce using rule 15 (term -> var .)
    PTO             reduce using rule 15 (term -> var .)
    TILDAEQ         reduce using rule 15 (term -> var .)
    AND             reduce using rule 15 (term -> var .)
    OR              reduce using rule 15 (term -> var .)
    ARROW           reduce using rule 15 (term -> var .)
    IFF             reduce using rule 15 (term -> var .)
    ISA             reduce using rule 15 (term -> var .)
    $end            reduce using rule 15 (term -> var .)
    RPAREN          reduce using rule 15 (term -> var .)
    COMMA           reduce using rule 15 (term -> var .)
    ELSE            reduce using rule 15 (term -> var .)


state 9

    (72) term -> EVENTUALLY . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 21
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 10

    (68) term -> EXISTS . simplevars DOT term
    (70) term -> EXISTS . LPAREN vars RPAREN term
    (27) simplevars -> . simplevar
    (28) simplevars -> . simplevars COMMA simplevar
    (8) simplevar -> . VARIABLE
    (9) simplevar -> . VARIABLE COLON SYMBOL

    LPAREN          shift and go to state 23
    VARIABLE        shift and go to state 24

    simplevar                      shift and go to state 25
    simplevars                     shift and go to state 22

state 11

    (74) term -> DOLLAR . SYMBOL DOT fmla

    SYMBOL          shift and go to state 26


state 12

    (67) term -> FORALL . simplevars DOT term
    (69) term -> FORALL . LPAREN vars RPAREN term
    (27) simplevars -> . simplevar
    (28) simplevars -> . simplevars COMMA simplevar
    (8) simplevar -> . VARIABLE
    (9) simplevar -> . VARIABLE COLON SYMBOL

    LPAREN          shift and go to state 28
    VARIABLE        shift and go to state 24

    simplevar                      shift and go to state 25
    simplevars                     shift and go to state 27

state 13

    (24) term -> LPAREN . term RPAREN
    (73) term -> LPAREN . DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    DOLLAR          shift and go to state 29
    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 30
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 14

    (6) var -> VARIABLE .
    (7) var -> VARIABLE . COLON atype

    DOT             reduce using rule 6 (var -> VARIABLE .)
    PLUS            reduce using rule 6 (var -> VARIABLE .)
    MINUS           reduce using rule 6 (var -> VARIABLE .)
    TIMES           reduce using rule 6 (var -> VARIABLE .)
    DIV             reduce using rule 6 (var -> VARIABLE .)
    IF              reduce using rule 6 (var -> VARIABLE .)
    EQ              reduce using rule 6 (var -> VARIABLE .)
    LE              reduce using rule 6 (var -> VARIABLE .)
    LT              reduce using rule 6 (var -> VARIABLE .)
    GE              reduce using rule 6 (var -> VARIABLE .)
    GT              reduce using rule 6 (var -> VARIABLE .)
    PTO             reduce using rule 6 (var -> VARIABLE .)
    TILDAEQ         reduce using rule 6 (var -> VARIABLE .)
    AND             reduce using rule 6 (var -> VARIABLE .)
    OR              reduce using rule 6 (var -> VARIABLE .)
    ARROW           reduce using rule 6 (var -> VARIABLE .)
    IFF             reduce using rule 6 (var -> VARIABLE .)
    ISA             reduce using rule 6 (var -> VARIABLE .)
    $end            reduce using rule 6 (var -> VARIABLE .)
    RPAREN          reduce using rule 6 (var -> VARIABLE .)
    COMMA           reduce using rule 6 (var -> VARIABLE .)
    ELSE            reduce using rule 6 (var -> VARIABLE .)
    COLON           shift and go to state 31


state 15

    (52) fmla -> term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PTO resolved as shift
  ! shift/reduce conflict for TILDAEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for ISA resolved as shift
    ELSE            reduce using rule 52 (fmla -> term .)
    $end            reduce using rule 52 (fmla -> term .)
    RPAREN          reduce using rule 52 (fmla -> term .)
    COMMA           reduce using rule 52 (fmla -> term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33

  ! DOT             [ reduce using rule 52 (fmla -> term .) ]
  ! PLUS            [ reduce using rule 52 (fmla -> term .) ]
  ! MINUS           [ reduce using rule 52 (fmla -> term .) ]
  ! TIMES           [ reduce using rule 52 (fmla -> term .) ]
  ! DIV             [ reduce using rule 52 (fmla -> term .) ]
  ! IF              [ reduce using rule 52 (fmla -> term .) ]
  ! EQ              [ reduce using rule 52 (fmla -> term .) ]
  ! LE              [ reduce using rule 52 (fmla -> term .) ]
  ! LT              [ reduce using rule 52 (fmla -> term .) ]
  ! GE              [ reduce using rule 52 (fmla -> term .) ]
  ! GT              [ reduce using rule 52 (fmla -> term .) ]
  ! PTO             [ reduce using rule 52 (fmla -> term .) ]
  ! TILDAEQ         [ reduce using rule 52 (fmla -> term .) ]
  ! AND             [ reduce using rule 52 (fmla -> term .) ]
  ! OR              [ reduce using rule 52 (fmla -> term .) ]
  ! ARROW           [ reduce using rule 52 (fmla -> term .) ]
  ! IFF             [ reduce using rule 52 (fmla -> term .) ]
  ! ISA             [ reduce using rule 52 (fmla -> term .) ]


state 16

    (61) term -> FALSE .

    DOT             reduce using rule 61 (term -> FALSE .)
    PLUS            reduce using rule 61 (term -> FALSE .)
    MINUS           reduce using rule 61 (term -> FALSE .)
    TIMES           reduce using rule 61 (term -> FALSE .)
    DIV             reduce using rule 61 (term -> FALSE .)
    IF              reduce using rule 61 (term -> FALSE .)
    EQ              reduce using rule 61 (term -> FALSE .)
    LE              reduce using rule 61 (term -> FALSE .)
    LT              reduce using rule 61 (term -> FALSE .)
    GE              reduce using rule 61 (term -> FALSE .)
    GT              reduce using rule 61 (term -> FALSE .)
    PTO             reduce using rule 61 (term -> FALSE .)
    TILDAEQ         reduce using rule 61 (term -> FALSE .)
    AND             reduce using rule 61 (term -> FALSE .)
    OR              reduce using rule 61 (term -> FALSE .)
    ARROW           reduce using rule 61 (term -> FALSE .)
    IFF             reduce using rule 61 (term -> FALSE .)
    ISA             reduce using rule 61 (term -> FALSE .)
    $end            reduce using rule 61 (term -> FALSE .)
    RPAREN          reduce using rule 61 (term -> FALSE .)
    COMMA           reduce using rule 61 (term -> FALSE .)
    ELSE            reduce using rule 61 (term -> FALSE .)


state 17

    (5) appelem -> SYMBOL LPAREN . terms RPAREN
    (21) terms -> .
    (22) terms -> . term
    (23) terms -> . terms COMMA term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    RPAREN          reduce using rule 21 (terms -> .)
    COMMA           reduce using rule 21 (terms -> .)
    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 51
    terms                          shift and go to state 50
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 18

    (71) term -> GLOBALLY term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 71 (term -> GLOBALLY term .)
    PTO             reduce using rule 71 (term -> GLOBALLY term .)
    ARROW           reduce using rule 71 (term -> GLOBALLY term .)
    IFF             reduce using rule 71 (term -> GLOBALLY term .)
    ISA             reduce using rule 71 (term -> GLOBALLY term .)
    $end            reduce using rule 71 (term -> GLOBALLY term .)
    RPAREN          reduce using rule 71 (term -> GLOBALLY term .)
    COMMA           reduce using rule 71 (term -> GLOBALLY term .)
    ELSE            reduce using rule 71 (term -> GLOBALLY term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! MINUS           [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! TIMES           [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! DIV             [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! IF              [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! EQ              [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! LE              [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! LT              [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! GE              [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! GT              [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! TILDAEQ         [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! AND             [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! OR              [ reduce using rule 71 (term -> GLOBALLY term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! PTO             [ shift and go to state 36 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 19

    (11) term -> OLD appelem .

    DOT             reduce using rule 11 (term -> OLD appelem .)
    PLUS            reduce using rule 11 (term -> OLD appelem .)
    MINUS           reduce using rule 11 (term -> OLD appelem .)
    TIMES           reduce using rule 11 (term -> OLD appelem .)
    DIV             reduce using rule 11 (term -> OLD appelem .)
    IF              reduce using rule 11 (term -> OLD appelem .)
    EQ              reduce using rule 11 (term -> OLD appelem .)
    LE              reduce using rule 11 (term -> OLD appelem .)
    LT              reduce using rule 11 (term -> OLD appelem .)
    GE              reduce using rule 11 (term -> OLD appelem .)
    GT              reduce using rule 11 (term -> OLD appelem .)
    PTO             reduce using rule 11 (term -> OLD appelem .)
    TILDAEQ         reduce using rule 11 (term -> OLD appelem .)
    AND             reduce using rule 11 (term -> OLD appelem .)
    OR              reduce using rule 11 (term -> OLD appelem .)
    ARROW           reduce using rule 11 (term -> OLD appelem .)
    IFF             reduce using rule 11 (term -> OLD appelem .)
    ISA             reduce using rule 11 (term -> OLD appelem .)
    $end            reduce using rule 11 (term -> OLD appelem .)
    RPAREN          reduce using rule 11 (term -> OLD appelem .)
    COMMA           reduce using rule 11 (term -> OLD appelem .)
    ELSE            reduce using rule 11 (term -> OLD appelem .)


state 20

    (62) term -> TILDA term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 62 (term -> TILDA term .)
    IF              reduce using rule 62 (term -> TILDA term .)
    PTO             reduce using rule 62 (term -> TILDA term .)
    AND             reduce using rule 62 (term -> TILDA term .)
    OR              reduce using rule 62 (term -> TILDA term .)
    ARROW           reduce using rule 62 (term -> TILDA term .)
    IFF             reduce using rule 62 (term -> TILDA term .)
    ISA             reduce using rule 62 (term -> TILDA term .)
    $end            reduce using rule 62 (term -> TILDA term .)
    RPAREN          reduce using rule 62 (term -> TILDA term .)
    COMMA           reduce using rule 62 (term -> TILDA term .)
    ELSE            reduce using rule 62 (term -> TILDA term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43

  ! PLUS            [ reduce using rule 62 (term -> TILDA term .) ]
  ! MINUS           [ reduce using rule 62 (term -> TILDA term .) ]
  ! TIMES           [ reduce using rule 62 (term -> TILDA term .) ]
  ! DIV             [ reduce using rule 62 (term -> TILDA term .) ]
  ! EQ              [ reduce using rule 62 (term -> TILDA term .) ]
  ! LE              [ reduce using rule 62 (term -> TILDA term .) ]
  ! LT              [ reduce using rule 62 (term -> TILDA term .) ]
  ! GE              [ reduce using rule 62 (term -> TILDA term .) ]
  ! GT              [ reduce using rule 62 (term -> TILDA term .) ]
  ! TILDAEQ         [ reduce using rule 62 (term -> TILDA term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! PTO             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 21

    (72) term -> EVENTUALLY term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 72 (term -> EVENTUALLY term .)
    PTO             reduce using rule 72 (term -> EVENTUALLY term .)
    ARROW           reduce using rule 72 (term -> EVENTUALLY term .)
    IFF             reduce using rule 72 (term -> EVENTUALLY term .)
    ISA             reduce using rule 72 (term -> EVENTUALLY term .)
    $end            reduce using rule 72 (term -> EVENTUALLY term .)
    RPAREN          reduce using rule 72 (term -> EVENTUALLY term .)
    COMMA           reduce using rule 72 (term -> EVENTUALLY term .)
    ELSE            reduce using rule 72 (term -> EVENTUALLY term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! MINUS           [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! TIMES           [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! DIV             [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! IF              [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! EQ              [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! LE              [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! LT              [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! GE              [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! GT              [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! TILDAEQ         [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! AND             [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! OR              [ reduce using rule 72 (term -> EVENTUALLY term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! PTO             [ shift and go to state 36 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 22

    (68) term -> EXISTS simplevars . DOT term
    (28) simplevars -> simplevars . COMMA simplevar

    DOT             shift and go to state 53
    COMMA           shift and go to state 52


state 23

    (70) term -> EXISTS LPAREN . vars RPAREN term
    (25) vars -> . var
    (26) vars -> . vars COMMA var
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    VARIABLE        shift and go to state 14

    var                            shift and go to state 55
    vars                           shift and go to state 54

state 24

    (8) simplevar -> VARIABLE .
    (9) simplevar -> VARIABLE . COLON SYMBOL

    DOT             reduce using rule 8 (simplevar -> VARIABLE .)
    COMMA           reduce using rule 8 (simplevar -> VARIABLE .)
    COLON           shift and go to state 56


state 25

    (27) simplevars -> simplevar .

    DOT             reduce using rule 27 (simplevars -> simplevar .)
    COMMA           reduce using rule 27 (simplevars -> simplevar .)


state 26

    (74) term -> DOLLAR SYMBOL . DOT fmla

    DOT             shift and go to state 57


state 27

    (67) term -> FORALL simplevars . DOT term
    (28) simplevars -> simplevars . COMMA simplevar

    DOT             shift and go to state 58
    COMMA           shift and go to state 52


state 28

    (69) term -> FORALL LPAREN . vars RPAREN term
    (25) vars -> . var
    (26) vars -> . vars COMMA var
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    VARIABLE        shift and go to state 14

    var                            shift and go to state 55
    vars                           shift and go to state 59

state 29

    (73) term -> LPAREN DOLLAR . SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> DOLLAR . SYMBOL DOT fmla

    SYMBOL          shift and go to state 60


state 30

    (24) term -> LPAREN term . RPAREN
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    RPAREN          shift and go to state 61
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33


state 31

    (7) var -> VARIABLE COLON . atype
    (1) atype -> . SYMBOL
    (2) atype -> . atype DOT SYMBOL
    (3) atype -> . THIS

    SYMBOL          shift and go to state 63
    THIS            shift and go to state 62

    atype                          shift and go to state 64

state 32

    (66) term -> term IFF . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 65
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 33

    (75) term -> term ISA . atype
    (1) atype -> . SYMBOL
    (2) atype -> . atype DOT SYMBOL
    (3) atype -> . THIS

    SYMBOL          shift and go to state 63
    THIS            shift and go to state 62

    atype                          shift and go to state 66

state 34

    (19) term -> term DIV . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 67
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 35

    (12) term -> term DOT . appelem
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN

    SYMBOL          shift and go to state 1

    appelem                        shift and go to state 68

state 36

    (58) term -> term PTO . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 69
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 37

    (54) term -> term LE . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 70
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 38

    (17) term -> term MINUS . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 71
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 39

    (55) term -> term LT . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 72
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 40

    (16) term -> term PLUS . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 73
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 41

    (57) term -> term GT . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 74
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 42

    (56) term -> term GE . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 75
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 43

    (59) term -> term TILDAEQ . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 76
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 44

    (65) term -> term ARROW . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 77
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 45

    (18) term -> term TIMES . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 78
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 46

    (53) term -> term EQ . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 79
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 47

    (20) term -> term IF . fmla ELSE term
    (52) fmla -> . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 15
    fmla                           shift and go to state 80
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 48

    (63) term -> term AND . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 81
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 49

    (64) term -> term OR . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 82
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 50

    (5) appelem -> SYMBOL LPAREN terms . RPAREN
    (23) terms -> terms . COMMA term

    RPAREN          shift and go to state 83
    COMMA           shift and go to state 84


state 51

    (22) terms -> term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    RPAREN          reduce using rule 22 (terms -> term .)
    COMMA           reduce using rule 22 (terms -> term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33


state 52

    (28) simplevars -> simplevars COMMA . simplevar
    (8) simplevar -> . VARIABLE
    (9) simplevar -> . VARIABLE COLON SYMBOL

    VARIABLE        shift and go to state 24

    simplevar                      shift and go to state 85

state 53

    (68) term -> EXISTS simplevars DOT . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 86
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 54

    (70) term -> EXISTS LPAREN vars . RPAREN term
    (26) vars -> vars . COMMA var

    RPAREN          shift and go to state 87
    COMMA           shift and go to state 88


state 55

    (25) vars -> var .

    RPAREN          reduce using rule 25 (vars -> var .)
    COMMA           reduce using rule 25 (vars -> var .)


state 56

    (9) simplevar -> VARIABLE COLON . SYMBOL

    SYMBOL          shift and go to state 89


state 57

    (74) term -> DOLLAR SYMBOL DOT . fmla
    (52) fmla -> . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 15
    fmla                           shift and go to state 90
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 58

    (67) term -> FORALL simplevars DOT . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 91
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 59

    (69) term -> FORALL LPAREN vars . RPAREN term
    (26) vars -> vars . COMMA var

    RPAREN          shift and go to state 92
    COMMA           shift and go to state 88


state 60

    (73) term -> LPAREN DOLLAR SYMBOL . simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> DOLLAR SYMBOL . DOT fmla
    (27) simplevars -> . simplevar
    (28) simplevars -> . simplevars COMMA simplevar
    (8) simplevar -> . VARIABLE
    (9) simplevar -> . VARIABLE COLON SYMBOL

    DOT             shift and go to state 57
    VARIABLE        shift and go to state 24

    simplevar                      shift and go to state 25
    simplevars                     shift and go to state 93

state 61

    (24) term -> LPAREN term RPAREN .

    DOT             reduce using rule 24 (term -> LPAREN term RPAREN .)
    PLUS            reduce using rule 24 (term -> LPAREN term RPAREN .)
    MINUS           reduce using rule 24 (term -> LPAREN term RPAREN .)
    TIMES           reduce using rule 24 (term -> LPAREN term RPAREN .)
    DIV             reduce using rule 24 (term -> LPAREN term RPAREN .)
    IF              reduce using rule 24 (term -> LPAREN term RPAREN .)
    EQ              reduce using rule 24 (term -> LPAREN term RPAREN .)
    LE              reduce using rule 24 (term -> LPAREN term RPAREN .)
    LT              reduce using rule 24 (term -> LPAREN term RPAREN .)
    GE              reduce using rule 24 (term -> LPAREN term RPAREN .)
    GT              reduce using rule 24 (term -> LPAREN term RPAREN .)
    PTO             reduce using rule 24 (term -> LPAREN term RPAREN .)
    TILDAEQ         reduce using rule 24 (term -> LPAREN term RPAREN .)
    AND             reduce using rule 24 (term -> LPAREN term RPAREN .)
    OR              reduce using rule 24 (term -> LPAREN term RPAREN .)
    ARROW           reduce using rule 24 (term -> LPAREN term RPAREN .)
    IFF             reduce using rule 24 (term -> LPAREN term RPAREN .)
    ISA             reduce using rule 24 (term -> LPAREN term RPAREN .)
    $end            reduce using rule 24 (term -> LPAREN term RPAREN .)
    RPAREN          reduce using rule 24 (term -> LPAREN term RPAREN .)
    COMMA           reduce using rule 24 (term -> LPAREN term RPAREN .)
    ELSE            reduce using rule 24 (term -> LPAREN term RPAREN .)


state 62

    (3) atype -> THIS .

    DOT             reduce using rule 3 (atype -> THIS .)
    PLUS            reduce using rule 3 (atype -> THIS .)
    MINUS           reduce using rule 3 (atype -> THIS .)
    TIMES           reduce using rule 3 (atype -> THIS .)
    DIV             reduce using rule 3 (atype -> THIS .)
    IF              reduce using rule 3 (atype -> THIS .)
    EQ              reduce using rule 3 (atype -> THIS .)
    LE              reduce using rule 3 (atype -> THIS .)
    LT              reduce using rule 3 (atype -> THIS .)
    GE              reduce using rule 3 (atype -> THIS .)
    GT              reduce using rule 3 (atype -> THIS .)
    PTO             reduce using rule 3 (atype -> THIS .)
    TILDAEQ         reduce using rule 3 (atype -> THIS .)
    AND             reduce using rule 3 (atype -> THIS .)
    OR              reduce using rule 3 (atype -> THIS .)
    ARROW           reduce using rule 3 (atype -> THIS .)
    IFF             reduce using rule 3 (atype -> THIS .)
    ISA             reduce using rule 3 (atype -> THIS .)
    $end            reduce using rule 3 (atype -> THIS .)
    RPAREN          reduce using rule 3 (atype -> THIS .)
    COMMA           reduce using rule 3 (atype -> THIS .)
    ELSE            reduce using rule 3 (atype -> THIS .)


state 63

    (1) atype -> SYMBOL .

    DOT             reduce using rule 1 (atype -> SYMBOL .)
    PLUS            reduce using rule 1 (atype -> SYMBOL .)
    MINUS           reduce using rule 1 (atype -> SYMBOL .)
    TIMES           reduce using rule 1 (atype -> SYMBOL .)
    DIV             reduce using rule 1 (atype -> SYMBOL .)
    IF              reduce using rule 1 (atype -> SYMBOL .)
    EQ              reduce using rule 1 (atype -> SYMBOL .)
    LE              reduce using rule 1 (atype -> SYMBOL .)
    LT              reduce using rule 1 (atype -> SYMBOL .)
    GE              reduce using rule 1 (atype -> SYMBOL .)
    GT              reduce using rule 1 (atype -> SYMBOL .)
    PTO             reduce using rule 1 (atype -> SYMBOL .)
    TILDAEQ         reduce using rule 1 (atype -> SYMBOL .)
    AND             reduce using rule 1 (atype -> SYMBOL .)
    OR              reduce using rule 1 (atype -> SYMBOL .)
    ARROW           reduce using rule 1 (atype -> SYMBOL .)
    IFF             reduce using rule 1 (atype -> SYMBOL .)
    ISA             reduce using rule 1 (atype -> SYMBOL .)
    $end            reduce using rule 1 (atype -> SYMBOL .)
    RPAREN          reduce using rule 1 (atype -> SYMBOL .)
    COMMA           reduce using rule 1 (atype -> SYMBOL .)
    ELSE            reduce using rule 1 (atype -> SYMBOL .)


state 64

    (7) var -> VARIABLE COLON atype .
    (2) atype -> atype . DOT SYMBOL

    DOT             reduce using rule 7 (var -> VARIABLE COLON atype .)
    PLUS            reduce using rule 7 (var -> VARIABLE COLON atype .)
    MINUS           reduce using rule 7 (var -> VARIABLE COLON atype .)
    TIMES           reduce using rule 7 (var -> VARIABLE COLON atype .)
    DIV             reduce using rule 7 (var -> VARIABLE COLON atype .)
    IF              reduce using rule 7 (var -> VARIABLE COLON atype .)
    EQ              reduce using rule 7 (var -> VARIABLE COLON atype .)
    LE              reduce using rule 7 (var -> VARIABLE COLON atype .)
    LT              reduce using rule 7 (var -> VARIABLE COLON atype .)
    GE              reduce using rule 7 (var -> VARIABLE COLON atype .)
    GT              reduce using rule 7 (var -> VARIABLE COLON atype .)
    PTO             reduce using rule 7 (var -> VARIABLE COLON atype .)
    TILDAEQ         reduce using rule 7 (var -> VARIABLE COLON atype .)
    AND             reduce using rule 7 (var -> VARIABLE COLON atype .)
    OR              reduce using rule 7 (var -> VARIABLE COLON atype .)
    ARROW           reduce using rule 7 (var -> VARIABLE COLON atype .)
    IFF             reduce using rule 7 (var -> VARIABLE COLON atype .)
    ISA             reduce using rule 7 (var -> VARIABLE COLON atype .)
    $end            reduce using rule 7 (var -> VARIABLE COLON atype .)
    RPAREN          reduce using rule 7 (var -> VARIABLE COLON atype .)
    COMMA           reduce using rule 7 (var -> VARIABLE COLON atype .)
    ELSE            reduce using rule 7 (var -> VARIABLE COLON atype .)

  ! DOT             [ shift and go to state 94 ]


state 65

    (66) term -> term IFF term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PTO resolved as shift
  ! shift/reduce conflict for TILDAEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for ISA resolved as shift
    $end            reduce using rule 66 (term -> term IFF term .)
    RPAREN          reduce using rule 66 (term -> term IFF term .)
    COMMA           reduce using rule 66 (term -> term IFF term .)
    ELSE            reduce using rule 66 (term -> term IFF term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33

  ! DOT             [ reduce using rule 66 (term -> term IFF term .) ]
  ! PLUS            [ reduce using rule 66 (term -> term IFF term .) ]
  ! MINUS           [ reduce using rule 66 (term -> term IFF term .) ]
  ! TIMES           [ reduce using rule 66 (term -> term IFF term .) ]
  ! DIV             [ reduce using rule 66 (term -> term IFF term .) ]
  ! IF              [ reduce using rule 66 (term -> term IFF term .) ]
  ! EQ              [ reduce using rule 66 (term -> term IFF term .) ]
  ! LE              [ reduce using rule 66 (term -> term IFF term .) ]
  ! LT              [ reduce using rule 66 (term -> term IFF term .) ]
  ! GE              [ reduce using rule 66 (term -> term IFF term .) ]
  ! GT              [ reduce using rule 66 (term -> term IFF term .) ]
  ! PTO             [ reduce using rule 66 (term -> term IFF term .) ]
  ! TILDAEQ         [ reduce using rule 66 (term -> term IFF term .) ]
  ! AND             [ reduce using rule 66 (term -> term IFF term .) ]
  ! OR              [ reduce using rule 66 (term -> term IFF term .) ]
  ! ARROW           [ reduce using rule 66 (term -> term IFF term .) ]
  ! IFF             [ reduce using rule 66 (term -> term IFF term .) ]
  ! ISA             [ reduce using rule 66 (term -> term IFF term .) ]


state 66

    (75) term -> term ISA atype .
    (2) atype -> atype . DOT SYMBOL

  ! shift/reduce conflict for DOT resolved as shift
    PLUS            reduce using rule 75 (term -> term ISA atype .)
    MINUS           reduce using rule 75 (term -> term ISA atype .)
    TIMES           reduce using rule 75 (term -> term ISA atype .)
    DIV             reduce using rule 75 (term -> term ISA atype .)
    IF              reduce using rule 75 (term -> term ISA atype .)
    EQ              reduce using rule 75 (term -> term ISA atype .)
    LE              reduce using rule 75 (term -> term ISA atype .)
    LT              reduce using rule 75 (term -> term ISA atype .)
    GE              reduce using rule 75 (term -> term ISA atype .)
    GT              reduce using rule 75 (term -> term ISA atype .)
    PTO             reduce using rule 75 (term -> term ISA atype .)
    TILDAEQ         reduce using rule 75 (term -> term ISA atype .)
    AND             reduce using rule 75 (term -> term ISA atype .)
    OR              reduce using rule 75 (term -> term ISA atype .)
    ARROW           reduce using rule 75 (term -> term ISA atype .)
    IFF             reduce using rule 75 (term -> term ISA atype .)
    ISA             reduce using rule 75 (term -> term ISA atype .)
    $end            reduce using rule 75 (term -> term ISA atype .)
    RPAREN          reduce using rule 75 (term -> term ISA atype .)
    COMMA           reduce using rule 75 (term -> term ISA atype .)
    ELSE            reduce using rule 75 (term -> term ISA atype .)
    DOT             shift and go to state 94

  ! DOT             [ reduce using rule 75 (term -> term ISA atype .) ]


state 67

    (19) term -> term DIV term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 19 (term -> term DIV term .)
    PLUS            reduce using rule 19 (term -> term DIV term .)
    MINUS           reduce using rule 19 (term -> term DIV term .)
    TIMES           reduce using rule 19 (term -> term DIV term .)
    DIV             reduce using rule 19 (term -> term DIV term .)
    IF              reduce using rule 19 (term -> term DIV term .)
    EQ              reduce using rule 19 (term -> term DIV term .)
    LE              reduce using rule 19 (term -> term DIV term .)
    LT              reduce using rule 19 (term -> term DIV term .)
    GE              reduce using rule 19 (term -> term DIV term .)
    GT              reduce using rule 19 (term -> term DIV term .)
    PTO             reduce using rule 19 (term -> term DIV term .)
    TILDAEQ         reduce using rule 19 (term -> term DIV term .)
    AND             reduce using rule 19 (term -> term DIV term .)
    OR              reduce using rule 19 (term -> term DIV term .)
    ARROW           reduce using rule 19 (term -> term DIV term .)
    IFF             reduce using rule 19 (term -> term DIV term .)
    ISA             reduce using rule 19 (term -> term DIV term .)
    $end            reduce using rule 19 (term -> term DIV term .)
    RPAREN          reduce using rule 19 (term -> term DIV term .)
    COMMA           reduce using rule 19 (term -> term DIV term .)
    ELSE            reduce using rule 19 (term -> term DIV term .)

  ! DOT             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 45 ]
  ! DIV             [ shift and go to state 34 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! TILDAEQ         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 68

    (12) term -> term DOT appelem .

    DOT             reduce using rule 12 (term -> term DOT appelem .)
    PLUS            reduce using rule 12 (term -> term DOT appelem .)
    MINUS           reduce using rule 12 (term -> term DOT appelem .)
    TIMES           reduce using rule 12 (term -> term DOT appelem .)
    DIV             reduce using rule 12 (term -> term DOT appelem .)
    IF              reduce using rule 12 (term -> term DOT appelem .)
    EQ              reduce using rule 12 (term -> term DOT appelem .)
    LE              reduce using rule 12 (term -> term DOT appelem .)
    LT              reduce using rule 12 (term -> term DOT appelem .)
    GE              reduce using rule 12 (term -> term DOT appelem .)
    GT              reduce using rule 12 (term -> term DOT appelem .)
    PTO             reduce using rule 12 (term -> term DOT appelem .)
    TILDAEQ         reduce using rule 12 (term -> term DOT appelem .)
    AND             reduce using rule 12 (term -> term DOT appelem .)
    OR              reduce using rule 12 (term -> term DOT appelem .)
    ARROW           reduce using rule 12 (term -> term DOT appelem .)
    IFF             reduce using rule 12 (term -> term DOT appelem .)
    ISA             reduce using rule 12 (term -> term DOT appelem .)
    $end            reduce using rule 12 (term -> term DOT appelem .)
    RPAREN          reduce using rule 12 (term -> term DOT appelem .)
    COMMA           reduce using rule 12 (term -> term DOT appelem .)
    ELSE            reduce using rule 12 (term -> term DOT appelem .)


state 69

    (58) term -> term PTO term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PTO resolved as shift
  ! shift/reduce conflict for TILDAEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for ISA resolved as shift
    $end            reduce using rule 58 (term -> term PTO term .)
    RPAREN          reduce using rule 58 (term -> term PTO term .)
    COMMA           reduce using rule 58 (term -> term PTO term .)
    ELSE            reduce using rule 58 (term -> term PTO term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33

  ! DOT             [ reduce using rule 58 (term -> term PTO term .) ]
  ! PLUS            [ reduce using rule 58 (term -> term PTO term .) ]
  ! MINUS           [ reduce using rule 58 (term -> term PTO term .) ]
  ! TIMES           [ reduce using rule 58 (term -> term PTO term .) ]
  ! DIV             [ reduce using rule 58 (term -> term PTO term .) ]
  ! IF              [ reduce using rule 58 (term -> term PTO term .) ]
  ! EQ              [ reduce using rule 58 (term -> term PTO term .) ]
  ! LE              [ reduce using rule 58 (term -> term PTO term .) ]
  ! LT              [ reduce using rule 58 (term -> term PTO term .) ]
  ! GE              [ reduce using rule 58 (term -> term PTO term .) ]
  ! GT              [ reduce using rule 58 (term -> term PTO term .) ]
  ! PTO             [ reduce using rule 58 (term -> term PTO term .) ]
  ! TILDAEQ         [ reduce using rule 58 (term -> term PTO term .) ]
  ! AND             [ reduce using rule 58 (term -> term PTO term .) ]
  ! OR              [ reduce using rule 58 (term -> term PTO term .) ]
  ! ARROW           [ reduce using rule 58 (term -> term PTO term .) ]
  ! IFF             [ reduce using rule 58 (term -> term PTO term .) ]
  ! ISA             [ reduce using rule 58 (term -> term PTO term .) ]


state 70

    (54) term -> term LE term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 54 (term -> term LE term .)
    IF              reduce using rule 54 (term -> term LE term .)
    EQ              reduce using rule 54 (term -> term LE term .)
    LE              reduce using rule 54 (term -> term LE term .)
    LT              reduce using rule 54 (term -> term LE term .)
    GE              reduce using rule 54 (term -> term LE term .)
    GT              reduce using rule 54 (term -> term LE term .)
    PTO             reduce using rule 54 (term -> term LE term .)
    AND             reduce using rule 54 (term -> term LE term .)
    OR              reduce using rule 54 (term -> term LE term .)
    ARROW           reduce using rule 54 (term -> term LE term .)
    IFF             reduce using rule 54 (term -> term LE term .)
    ISA             reduce using rule 54 (term -> term LE term .)
    $end            reduce using rule 54 (term -> term LE term .)
    RPAREN          reduce using rule 54 (term -> term LE term .)
    COMMA           reduce using rule 54 (term -> term LE term .)
    ELSE            reduce using rule 54 (term -> term LE term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    TILDAEQ         shift and go to state 43

  ! PLUS            [ reduce using rule 54 (term -> term LE term .) ]
  ! MINUS           [ reduce using rule 54 (term -> term LE term .) ]
  ! TIMES           [ reduce using rule 54 (term -> term LE term .) ]
  ! DIV             [ reduce using rule 54 (term -> term LE term .) ]
  ! TILDAEQ         [ reduce using rule 54 (term -> term LE term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 71

    (17) term -> term MINUS term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 17 (term -> term MINUS term .)
    PLUS            reduce using rule 17 (term -> term MINUS term .)
    MINUS           reduce using rule 17 (term -> term MINUS term .)
    IF              reduce using rule 17 (term -> term MINUS term .)
    EQ              reduce using rule 17 (term -> term MINUS term .)
    LE              reduce using rule 17 (term -> term MINUS term .)
    LT              reduce using rule 17 (term -> term MINUS term .)
    GE              reduce using rule 17 (term -> term MINUS term .)
    GT              reduce using rule 17 (term -> term MINUS term .)
    PTO             reduce using rule 17 (term -> term MINUS term .)
    TILDAEQ         reduce using rule 17 (term -> term MINUS term .)
    AND             reduce using rule 17 (term -> term MINUS term .)
    OR              reduce using rule 17 (term -> term MINUS term .)
    ARROW           reduce using rule 17 (term -> term MINUS term .)
    IFF             reduce using rule 17 (term -> term MINUS term .)
    ISA             reduce using rule 17 (term -> term MINUS term .)
    $end            reduce using rule 17 (term -> term MINUS term .)
    RPAREN          reduce using rule 17 (term -> term MINUS term .)
    COMMA           reduce using rule 17 (term -> term MINUS term .)
    ELSE            reduce using rule 17 (term -> term MINUS term .)
    TIMES           shift and go to state 45
    DIV             shift and go to state 34

  ! TIMES           [ reduce using rule 17 (term -> term MINUS term .) ]
  ! DIV             [ reduce using rule 17 (term -> term MINUS term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 38 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! TILDAEQ         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 72

    (55) term -> term LT term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 55 (term -> term LT term .)
    IF              reduce using rule 55 (term -> term LT term .)
    EQ              reduce using rule 55 (term -> term LT term .)
    LE              reduce using rule 55 (term -> term LT term .)
    LT              reduce using rule 55 (term -> term LT term .)
    GE              reduce using rule 55 (term -> term LT term .)
    GT              reduce using rule 55 (term -> term LT term .)
    PTO             reduce using rule 55 (term -> term LT term .)
    AND             reduce using rule 55 (term -> term LT term .)
    OR              reduce using rule 55 (term -> term LT term .)
    ARROW           reduce using rule 55 (term -> term LT term .)
    IFF             reduce using rule 55 (term -> term LT term .)
    ISA             reduce using rule 55 (term -> term LT term .)
    $end            reduce using rule 55 (term -> term LT term .)
    RPAREN          reduce using rule 55 (term -> term LT term .)
    COMMA           reduce using rule 55 (term -> term LT term .)
    ELSE            reduce using rule 55 (term -> term LT term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    TILDAEQ         shift and go to state 43

  ! PLUS            [ reduce using rule 55 (term -> term LT term .) ]
  ! MINUS           [ reduce using rule 55 (term -> term LT term .) ]
  ! TIMES           [ reduce using rule 55 (term -> term LT term .) ]
  ! DIV             [ reduce using rule 55 (term -> term LT term .) ]
  ! TILDAEQ         [ reduce using rule 55 (term -> term LT term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 73

    (16) term -> term PLUS term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 16 (term -> term PLUS term .)
    PLUS            reduce using rule 16 (term -> term PLUS term .)
    IF              reduce using rule 16 (term -> term PLUS term .)
    EQ              reduce using rule 16 (term -> term PLUS term .)
    LE              reduce using rule 16 (term -> term PLUS term .)
    LT              reduce using rule 16 (term -> term PLUS term .)
    GE              reduce using rule 16 (term -> term PLUS term .)
    GT              reduce using rule 16 (term -> term PLUS term .)
    PTO             reduce using rule 16 (term -> term PLUS term .)
    TILDAEQ         reduce using rule 16 (term -> term PLUS term .)
    AND             reduce using rule 16 (term -> term PLUS term .)
    OR              reduce using rule 16 (term -> term PLUS term .)
    ARROW           reduce using rule 16 (term -> term PLUS term .)
    IFF             reduce using rule 16 (term -> term PLUS term .)
    ISA             reduce using rule 16 (term -> term PLUS term .)
    $end            reduce using rule 16 (term -> term PLUS term .)
    RPAREN          reduce using rule 16 (term -> term PLUS term .)
    COMMA           reduce using rule 16 (term -> term PLUS term .)
    ELSE            reduce using rule 16 (term -> term PLUS term .)
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34

  ! MINUS           [ reduce using rule 16 (term -> term PLUS term .) ]
  ! TIMES           [ reduce using rule 16 (term -> term PLUS term .) ]
  ! DIV             [ reduce using rule 16 (term -> term PLUS term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 40 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! TILDAEQ         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 74

    (57) term -> term GT term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 57 (term -> term GT term .)
    IF              reduce using rule 57 (term -> term GT term .)
    EQ              reduce using rule 57 (term -> term GT term .)
    LE              reduce using rule 57 (term -> term GT term .)
    LT              reduce using rule 57 (term -> term GT term .)
    GE              reduce using rule 57 (term -> term GT term .)
    GT              reduce using rule 57 (term -> term GT term .)
    PTO             reduce using rule 57 (term -> term GT term .)
    AND             reduce using rule 57 (term -> term GT term .)
    OR              reduce using rule 57 (term -> term GT term .)
    ARROW           reduce using rule 57 (term -> term GT term .)
    IFF             reduce using rule 57 (term -> term GT term .)
    ISA             reduce using rule 57 (term -> term GT term .)
    $end            reduce using rule 57 (term -> term GT term .)
    RPAREN          reduce using rule 57 (term -> term GT term .)
    COMMA           reduce using rule 57 (term -> term GT term .)
    ELSE            reduce using rule 57 (term -> term GT term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    TILDAEQ         shift and go to state 43

  ! PLUS            [ reduce using rule 57 (term -> term GT term .) ]
  ! MINUS           [ reduce using rule 57 (term -> term GT term .) ]
  ! TIMES           [ reduce using rule 57 (term -> term GT term .) ]
  ! DIV             [ reduce using rule 57 (term -> term GT term .) ]
  ! TILDAEQ         [ reduce using rule 57 (term -> term GT term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 75

    (56) term -> term GE term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 56 (term -> term GE term .)
    IF              reduce using rule 56 (term -> term GE term .)
    EQ              reduce using rule 56 (term -> term GE term .)
    LE              reduce using rule 56 (term -> term GE term .)
    LT              reduce using rule 56 (term -> term GE term .)
    GE              reduce using rule 56 (term -> term GE term .)
    GT              reduce using rule 56 (term -> term GE term .)
    PTO             reduce using rule 56 (term -> term GE term .)
    AND             reduce using rule 56 (term -> term GE term .)
    OR              reduce using rule 56 (term -> term GE term .)
    ARROW           reduce using rule 56 (term -> term GE term .)
    IFF             reduce using rule 56 (term -> term GE term .)
    ISA             reduce using rule 56 (term -> term GE term .)
    $end            reduce using rule 56 (term -> term GE term .)
    RPAREN          reduce using rule 56 (term -> term GE term .)
    COMMA           reduce using rule 56 (term -> term GE term .)
    ELSE            reduce using rule 56 (term -> term GE term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    TILDAEQ         shift and go to state 43

  ! PLUS            [ reduce using rule 56 (term -> term GE term .) ]
  ! MINUS           [ reduce using rule 56 (term -> term GE term .) ]
  ! TIMES           [ reduce using rule 56 (term -> term GE term .) ]
  ! DIV             [ reduce using rule 56 (term -> term GE term .) ]
  ! TILDAEQ         [ reduce using rule 56 (term -> term GE term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 76

    (59) term -> term TILDAEQ term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 59 (term -> term TILDAEQ term .)
    IF              reduce using rule 59 (term -> term TILDAEQ term .)
    EQ              reduce using rule 59 (term -> term TILDAEQ term .)
    LE              reduce using rule 59 (term -> term TILDAEQ term .)
    LT              reduce using rule 59 (term -> term TILDAEQ term .)
    GE              reduce using rule 59 (term -> term TILDAEQ term .)
    GT              reduce using rule 59 (term -> term TILDAEQ term .)
    PTO             reduce using rule 59 (term -> term TILDAEQ term .)
    TILDAEQ         reduce using rule 59 (term -> term TILDAEQ term .)
    AND             reduce using rule 59 (term -> term TILDAEQ term .)
    OR              reduce using rule 59 (term -> term TILDAEQ term .)
    ARROW           reduce using rule 59 (term -> term TILDAEQ term .)
    IFF             reduce using rule 59 (term -> term TILDAEQ term .)
    ISA             reduce using rule 59 (term -> term TILDAEQ term .)
    $end            reduce using rule 59 (term -> term TILDAEQ term .)
    RPAREN          reduce using rule 59 (term -> term TILDAEQ term .)
    COMMA           reduce using rule 59 (term -> term TILDAEQ term .)
    ELSE            reduce using rule 59 (term -> term TILDAEQ term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34

  ! PLUS            [ reduce using rule 59 (term -> term TILDAEQ term .) ]
  ! MINUS           [ reduce using rule 59 (term -> term TILDAEQ term .) ]
  ! TIMES           [ reduce using rule 59 (term -> term TILDAEQ term .) ]
  ! DIV             [ reduce using rule 59 (term -> term TILDAEQ term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! TILDAEQ         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 77

    (65) term -> term ARROW term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PTO resolved as shift
  ! shift/reduce conflict for TILDAEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for ISA resolved as shift
    $end            reduce using rule 65 (term -> term ARROW term .)
    RPAREN          reduce using rule 65 (term -> term ARROW term .)
    COMMA           reduce using rule 65 (term -> term ARROW term .)
    ELSE            reduce using rule 65 (term -> term ARROW term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33

  ! DOT             [ reduce using rule 65 (term -> term ARROW term .) ]
  ! PLUS            [ reduce using rule 65 (term -> term ARROW term .) ]
  ! MINUS           [ reduce using rule 65 (term -> term ARROW term .) ]
  ! TIMES           [ reduce using rule 65 (term -> term ARROW term .) ]
  ! DIV             [ reduce using rule 65 (term -> term ARROW term .) ]
  ! IF              [ reduce using rule 65 (term -> term ARROW term .) ]
  ! EQ              [ reduce using rule 65 (term -> term ARROW term .) ]
  ! LE              [ reduce using rule 65 (term -> term ARROW term .) ]
  ! LT              [ reduce using rule 65 (term -> term ARROW term .) ]
  ! GE              [ reduce using rule 65 (term -> term ARROW term .) ]
  ! GT              [ reduce using rule 65 (term -> term ARROW term .) ]
  ! PTO             [ reduce using rule 65 (term -> term ARROW term .) ]
  ! TILDAEQ         [ reduce using rule 65 (term -> term ARROW term .) ]
  ! AND             [ reduce using rule 65 (term -> term ARROW term .) ]
  ! OR              [ reduce using rule 65 (term -> term ARROW term .) ]
  ! ARROW           [ reduce using rule 65 (term -> term ARROW term .) ]
  ! IFF             [ reduce using rule 65 (term -> term ARROW term .) ]
  ! ISA             [ reduce using rule 65 (term -> term ARROW term .) ]


state 78

    (18) term -> term TIMES term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 18 (term -> term TIMES term .)
    PLUS            reduce using rule 18 (term -> term TIMES term .)
    MINUS           reduce using rule 18 (term -> term TIMES term .)
    TIMES           reduce using rule 18 (term -> term TIMES term .)
    IF              reduce using rule 18 (term -> term TIMES term .)
    EQ              reduce using rule 18 (term -> term TIMES term .)
    LE              reduce using rule 18 (term -> term TIMES term .)
    LT              reduce using rule 18 (term -> term TIMES term .)
    GE              reduce using rule 18 (term -> term TIMES term .)
    GT              reduce using rule 18 (term -> term TIMES term .)
    PTO             reduce using rule 18 (term -> term TIMES term .)
    TILDAEQ         reduce using rule 18 (term -> term TIMES term .)
    AND             reduce using rule 18 (term -> term TIMES term .)
    OR              reduce using rule 18 (term -> term TIMES term .)
    ARROW           reduce using rule 18 (term -> term TIMES term .)
    IFF             reduce using rule 18 (term -> term TIMES term .)
    ISA             reduce using rule 18 (term -> term TIMES term .)
    $end            reduce using rule 18 (term -> term TIMES term .)
    RPAREN          reduce using rule 18 (term -> term TIMES term .)
    COMMA           reduce using rule 18 (term -> term TIMES term .)
    ELSE            reduce using rule 18 (term -> term TIMES term .)
    DIV             shift and go to state 34

  ! DIV             [ reduce using rule 18 (term -> term TIMES term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 38 ]
  ! TIMES           [ shift and go to state 45 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! TILDAEQ         [ shift and go to state 43 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 79

    (53) term -> term EQ term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 53 (term -> term EQ term .)
    IF              reduce using rule 53 (term -> term EQ term .)
    EQ              reduce using rule 53 (term -> term EQ term .)
    LE              reduce using rule 53 (term -> term EQ term .)
    LT              reduce using rule 53 (term -> term EQ term .)
    GE              reduce using rule 53 (term -> term EQ term .)
    GT              reduce using rule 53 (term -> term EQ term .)
    PTO             reduce using rule 53 (term -> term EQ term .)
    AND             reduce using rule 53 (term -> term EQ term .)
    OR              reduce using rule 53 (term -> term EQ term .)
    ARROW           reduce using rule 53 (term -> term EQ term .)
    IFF             reduce using rule 53 (term -> term EQ term .)
    ISA             reduce using rule 53 (term -> term EQ term .)
    $end            reduce using rule 53 (term -> term EQ term .)
    RPAREN          reduce using rule 53 (term -> term EQ term .)
    COMMA           reduce using rule 53 (term -> term EQ term .)
    ELSE            reduce using rule 53 (term -> term EQ term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    TILDAEQ         shift and go to state 43

  ! PLUS            [ reduce using rule 53 (term -> term EQ term .) ]
  ! MINUS           [ reduce using rule 53 (term -> term EQ term .) ]
  ! TIMES           [ reduce using rule 53 (term -> term EQ term .) ]
  ! DIV             [ reduce using rule 53 (term -> term EQ term .) ]
  ! TILDAEQ         [ reduce using rule 53 (term -> term EQ term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! EQ              [ shift and go to state 46 ]
  ! LE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 39 ]
  ! GE              [ shift and go to state 42 ]
  ! GT              [ shift and go to state 41 ]
  ! PTO             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 80

    (20) term -> term IF fmla . ELSE term

    ELSE            shift and go to state 95


state 81

    (63) term -> term AND term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 63 (term -> term AND term .)
    IF              reduce using rule 63 (term -> term AND term .)
    PTO             reduce using rule 63 (term -> term AND term .)
    AND             reduce using rule 63 (term -> term AND term .)
    OR              reduce using rule 63 (term -> term AND term .)
    ARROW           reduce using rule 63 (term -> term AND term .)
    IFF             reduce using rule 63 (term -> term AND term .)
    ISA             reduce using rule 63 (term -> term AND term .)
    $end            reduce using rule 63 (term -> term AND term .)
    RPAREN          reduce using rule 63 (term -> term AND term .)
    COMMA           reduce using rule 63 (term -> term AND term .)
    ELSE            reduce using rule 63 (term -> term AND term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43

  ! PLUS            [ reduce using rule 63 (term -> term AND term .) ]
  ! MINUS           [ reduce using rule 63 (term -> term AND term .) ]
  ! TIMES           [ reduce using rule 63 (term -> term AND term .) ]
  ! DIV             [ reduce using rule 63 (term -> term AND term .) ]
  ! EQ              [ reduce using rule 63 (term -> term AND term .) ]
  ! LE              [ reduce using rule 63 (term -> term AND term .) ]
  ! LT              [ reduce using rule 63 (term -> term AND term .) ]
  ! GE              [ reduce using rule 63 (term -> term AND term .) ]
  ! GT              [ reduce using rule 63 (term -> term AND term .) ]
  ! TILDAEQ         [ reduce using rule 63 (term -> term AND term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! PTO             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 82

    (64) term -> term OR term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 64 (term -> term OR term .)
    IF              reduce using rule 64 (term -> term OR term .)
    PTO             reduce using rule 64 (term -> term OR term .)
    OR              reduce using rule 64 (term -> term OR term .)
    ARROW           reduce using rule 64 (term -> term OR term .)
    IFF             reduce using rule 64 (term -> term OR term .)
    ISA             reduce using rule 64 (term -> term OR term .)
    $end            reduce using rule 64 (term -> term OR term .)
    RPAREN          reduce using rule 64 (term -> term OR term .)
    COMMA           reduce using rule 64 (term -> term OR term .)
    ELSE            reduce using rule 64 (term -> term OR term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48

  ! PLUS            [ reduce using rule 64 (term -> term OR term .) ]
  ! MINUS           [ reduce using rule 64 (term -> term OR term .) ]
  ! TIMES           [ reduce using rule 64 (term -> term OR term .) ]
  ! DIV             [ reduce using rule 64 (term -> term OR term .) ]
  ! EQ              [ reduce using rule 64 (term -> term OR term .) ]
  ! LE              [ reduce using rule 64 (term -> term OR term .) ]
  ! LT              [ reduce using rule 64 (term -> term OR term .) ]
  ! GE              [ reduce using rule 64 (term -> term OR term .) ]
  ! GT              [ reduce using rule 64 (term -> term OR term .) ]
  ! TILDAEQ         [ reduce using rule 64 (term -> term OR term .) ]
  ! AND             [ reduce using rule 64 (term -> term OR term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! PTO             [ shift and go to state 36 ]
  ! OR              [ shift and go to state 49 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 83

    (5) appelem -> SYMBOL LPAREN terms RPAREN .

    DOT             reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    PLUS            reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    MINUS           reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    TIMES           reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    DIV             reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    IF              reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    EQ              reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    LE              reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    LT              reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    GE              reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    GT              reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    PTO             reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    TILDAEQ         reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    AND             reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    OR              reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    ARROW           reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    IFF             reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    ISA             reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    $end            reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    RPAREN          reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    COMMA           reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)
    ELSE            reduce using rule 5 (appelem -> SYMBOL LPAREN terms RPAREN .)


state 84

    (23) terms -> terms COMMA . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 96
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 85

    (28) simplevars -> simplevars COMMA simplevar .

    DOT             reduce using rule 28 (simplevars -> simplevars COMMA simplevar .)
    COMMA           reduce using rule 28 (simplevars -> simplevars COMMA simplevar .)


state 86

    (68) term -> EXISTS simplevars DOT term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    PTO             reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    ARROW           reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    IFF             reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    ISA             reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    $end            reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    RPAREN          reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    COMMA           reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    ELSE            reduce using rule 68 (term -> EXISTS simplevars DOT term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! MINUS           [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! TIMES           [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! DIV             [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! IF              [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! EQ              [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! LE              [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! LT              [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! GE              [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! GT              [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! TILDAEQ         [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! AND             [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! OR              [ reduce using rule 68 (term -> EXISTS simplevars DOT term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! PTO             [ shift and go to state 36 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 87

    (70) term -> EXISTS LPAREN vars RPAREN . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 97
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 88

    (26) vars -> vars COMMA . var
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    VARIABLE        shift and go to state 14

    var                            shift and go to state 98

state 89

    (9) simplevar -> VARIABLE COLON SYMBOL .

    DOT             reduce using rule 9 (simplevar -> VARIABLE COLON SYMBOL .)
    COMMA           reduce using rule 9 (simplevar -> VARIABLE COLON SYMBOL .)


state 90

    (74) term -> DOLLAR SYMBOL DOT fmla .

    DOT             reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    PLUS            reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    MINUS           reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    TIMES           reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    DIV             reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    IF              reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    EQ              reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    LE              reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    LT              reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    GE              reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    GT              reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    PTO             reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    TILDAEQ         reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    AND             reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    OR              reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    ARROW           reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    IFF             reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    ISA             reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    $end            reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    RPAREN          reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    COMMA           reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)
    ELSE            reduce using rule 74 (term -> DOLLAR SYMBOL DOT fmla .)


state 91

    (67) term -> FORALL simplevars DOT term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 67 (term -> FORALL simplevars DOT term .)
    PTO             reduce using rule 67 (term -> FORALL simplevars DOT term .)
    ARROW           reduce using rule 67 (term -> FORALL simplevars DOT term .)
    IFF             reduce using rule 67 (term -> FORALL simplevars DOT term .)
    ISA             reduce using rule 67 (term -> FORALL simplevars DOT term .)
    $end            reduce using rule 67 (term -> FORALL simplevars DOT term .)
    RPAREN          reduce using rule 67 (term -> FORALL simplevars DOT term .)
    COMMA           reduce using rule 67 (term -> FORALL simplevars DOT term .)
    ELSE            reduce using rule 67 (term -> FORALL simplevars DOT term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! MINUS           [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! TIMES           [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! DIV             [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! IF              [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! EQ              [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! LE              [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! LT              [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! GE              [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! GT              [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! TILDAEQ         [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! AND             [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! OR              [ reduce using rule 67 (term -> FORALL simplevars DOT term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! PTO             [ shift and go to state 36 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 92

    (69) term -> FORALL LPAREN vars RPAREN . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 99
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 93

    (73) term -> LPAREN DOLLAR SYMBOL simplevars . DOT fmla RPAREN LPAREN terms RPAREN
    (28) simplevars -> simplevars . COMMA simplevar

    DOT             shift and go to state 100
    COMMA           shift and go to state 52


state 94

    (2) atype -> atype DOT . SYMBOL

    SYMBOL          shift and go to state 101


state 95

    (20) term -> term IF fmla ELSE . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 102
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 96

    (23) terms -> terms COMMA term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    RPAREN          reduce using rule 23 (terms -> terms COMMA term .)
    COMMA           reduce using rule 23 (terms -> terms COMMA term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33


state 97

    (70) term -> EXISTS LPAREN vars RPAREN term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PTO resolved as shift
  ! shift/reduce conflict for TILDAEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for ISA resolved as shift
    $end            reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .)
    RPAREN          reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .)
    COMMA           reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .)
    ELSE            reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33

  ! DOT             [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! PLUS            [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! MINUS           [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! TIMES           [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! DIV             [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! IF              [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! EQ              [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! LE              [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! LT              [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! GE              [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! GT              [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! PTO             [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! TILDAEQ         [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! AND             [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! OR              [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! ARROW           [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! IFF             [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]
  ! ISA             [ reduce using rule 70 (term -> EXISTS LPAREN vars RPAREN term .) ]


state 98

    (26) vars -> vars COMMA var .

    RPAREN          reduce using rule 26 (vars -> vars COMMA var .)
    COMMA           reduce using rule 26 (vars -> vars COMMA var .)


state 99

    (69) term -> FORALL LPAREN vars RPAREN term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PTO resolved as shift
  ! shift/reduce conflict for TILDAEQ resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for IFF resolved as shift
  ! shift/reduce conflict for ISA resolved as shift
    $end            reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .)
    RPAREN          reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .)
    COMMA           reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .)
    ELSE            reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .)
    DOT             shift and go to state 35
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    IF              shift and go to state 47
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    PTO             shift and go to state 36
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49
    ARROW           shift and go to state 44
    IFF             shift and go to state 32
    ISA             shift and go to state 33

  ! DOT             [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! PLUS            [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! MINUS           [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! TIMES           [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! DIV             [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! IF              [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! EQ              [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! LE              [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! LT              [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! GE              [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! GT              [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! PTO             [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! TILDAEQ         [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! AND             [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! OR              [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! ARROW           [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! IFF             [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]
  ! ISA             [ reduce using rule 69 (term -> FORALL LPAREN vars RPAREN term .) ]


state 100

    (73) term -> LPAREN DOLLAR SYMBOL simplevars DOT . fmla RPAREN LPAREN terms RPAREN
    (52) fmla -> . term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 15
    fmla                           shift and go to state 103
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 101

    (2) atype -> atype DOT SYMBOL .

    DOT             reduce using rule 2 (atype -> atype DOT SYMBOL .)
    PLUS            reduce using rule 2 (atype -> atype DOT SYMBOL .)
    MINUS           reduce using rule 2 (atype -> atype DOT SYMBOL .)
    TIMES           reduce using rule 2 (atype -> atype DOT SYMBOL .)
    DIV             reduce using rule 2 (atype -> atype DOT SYMBOL .)
    IF              reduce using rule 2 (atype -> atype DOT SYMBOL .)
    EQ              reduce using rule 2 (atype -> atype DOT SYMBOL .)
    LE              reduce using rule 2 (atype -> atype DOT SYMBOL .)
    LT              reduce using rule 2 (atype -> atype DOT SYMBOL .)
    GE              reduce using rule 2 (atype -> atype DOT SYMBOL .)
    GT              reduce using rule 2 (atype -> atype DOT SYMBOL .)
    PTO             reduce using rule 2 (atype -> atype DOT SYMBOL .)
    TILDAEQ         reduce using rule 2 (atype -> atype DOT SYMBOL .)
    AND             reduce using rule 2 (atype -> atype DOT SYMBOL .)
    OR              reduce using rule 2 (atype -> atype DOT SYMBOL .)
    ARROW           reduce using rule 2 (atype -> atype DOT SYMBOL .)
    IFF             reduce using rule 2 (atype -> atype DOT SYMBOL .)
    ISA             reduce using rule 2 (atype -> atype DOT SYMBOL .)
    $end            reduce using rule 2 (atype -> atype DOT SYMBOL .)
    RPAREN          reduce using rule 2 (atype -> atype DOT SYMBOL .)
    COMMA           reduce using rule 2 (atype -> atype DOT SYMBOL .)
    ELSE            reduce using rule 2 (atype -> atype DOT SYMBOL .)


state 102

    (20) term -> term IF fmla ELSE term .
    (12) term -> term . DOT appelem
    (16) term -> term . PLUS term
    (17) term -> term . MINUS term
    (18) term -> term . TIMES term
    (19) term -> term . DIV term
    (20) term -> term . IF fmla ELSE term
    (53) term -> term . EQ term
    (54) term -> term . LE term
    (55) term -> term . LT term
    (56) term -> term . GE term
    (57) term -> term . GT term
    (58) term -> term . PTO term
    (59) term -> term . TILDAEQ term
    (63) term -> term . AND term
    (64) term -> term . OR term
    (65) term -> term . ARROW term
    (66) term -> term . IFF term
    (75) term -> term . ISA atype

    DOT             reduce using rule 20 (term -> term IF fmla ELSE term .)
    IF              reduce using rule 20 (term -> term IF fmla ELSE term .)
    PTO             reduce using rule 20 (term -> term IF fmla ELSE term .)
    ARROW           reduce using rule 20 (term -> term IF fmla ELSE term .)
    IFF             reduce using rule 20 (term -> term IF fmla ELSE term .)
    ISA             reduce using rule 20 (term -> term IF fmla ELSE term .)
    $end            reduce using rule 20 (term -> term IF fmla ELSE term .)
    RPAREN          reduce using rule 20 (term -> term IF fmla ELSE term .)
    COMMA           reduce using rule 20 (term -> term IF fmla ELSE term .)
    ELSE            reduce using rule 20 (term -> term IF fmla ELSE term .)
    PLUS            shift and go to state 40
    MINUS           shift and go to state 38
    TIMES           shift and go to state 45
    DIV             shift and go to state 34
    EQ              shift and go to state 46
    LE              shift and go to state 37
    LT              shift and go to state 39
    GE              shift and go to state 42
    GT              shift and go to state 41
    TILDAEQ         shift and go to state 43
    AND             shift and go to state 48
    OR              shift and go to state 49

  ! PLUS            [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! MINUS           [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! TIMES           [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! DIV             [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! EQ              [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! LE              [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! LT              [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! GE              [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! GT              [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! TILDAEQ         [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! AND             [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! OR              [ reduce using rule 20 (term -> term IF fmla ELSE term .) ]
  ! DOT             [ shift and go to state 35 ]
  ! IF              [ shift and go to state 47 ]
  ! PTO             [ shift and go to state 36 ]
  ! ARROW           [ shift and go to state 44 ]
  ! IFF             [ shift and go to state 32 ]
  ! ISA             [ shift and go to state 33 ]


state 103

    (73) term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla . RPAREN LPAREN terms RPAREN

    RPAREN          shift and go to state 104


state 104

    (73) term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN . LPAREN terms RPAREN

    LPAREN          shift and go to state 105


state 105

    (73) term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN . terms RPAREN
    (21) terms -> .
    (22) terms -> . term
    (23) terms -> . terms COMMA term
    (10) term -> . appelem
    (11) term -> . OLD appelem
    (12) term -> . term DOT appelem
    (15) term -> . var
    (16) term -> . term PLUS term
    (17) term -> . term MINUS term
    (18) term -> . term TIMES term
    (19) term -> . term DIV term
    (20) term -> . term IF fmla ELSE term
    (24) term -> . LPAREN term RPAREN
    (53) term -> . term EQ term
    (54) term -> . term LE term
    (55) term -> . term LT term
    (56) term -> . term GE term
    (57) term -> . term GT term
    (58) term -> . term PTO term
    (59) term -> . term TILDAEQ term
    (60) term -> . TRUE
    (61) term -> . FALSE
    (62) term -> . TILDA term
    (63) term -> . term AND term
    (64) term -> . term OR term
    (65) term -> . term ARROW term
    (66) term -> . term IFF term
    (67) term -> . FORALL simplevars DOT term
    (68) term -> . EXISTS simplevars DOT term
    (69) term -> . FORALL LPAREN vars RPAREN term
    (70) term -> . EXISTS LPAREN vars RPAREN term
    (71) term -> . GLOBALLY term
    (72) term -> . EVENTUALLY term
    (73) term -> . LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN
    (74) term -> . DOLLAR SYMBOL DOT fmla
    (75) term -> . term ISA atype
    (4) appelem -> . SYMBOL
    (5) appelem -> . SYMBOL LPAREN terms RPAREN
    (6) var -> . VARIABLE
    (7) var -> . VARIABLE COLON atype

    RPAREN          reduce using rule 21 (terms -> .)
    COMMA           reduce using rule 21 (terms -> .)
    OLD             shift and go to state 5
    LPAREN          shift and go to state 13
    TRUE            shift and go to state 3
    FALSE           shift and go to state 16
    TILDA           shift and go to state 6
    FORALL          shift and go to state 12
    EXISTS          shift and go to state 10
    GLOBALLY        shift and go to state 2
    EVENTUALLY      shift and go to state 9
    DOLLAR          shift and go to state 11
    SYMBOL          shift and go to state 1
    VARIABLE        shift and go to state 14

    term                           shift and go to state 51
    terms                          shift and go to state 106
    var                            shift and go to state 8
    appelem                        shift and go to state 4

state 106

    (73) term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms . RPAREN
    (23) terms -> terms . COMMA term

    RPAREN          shift and go to state 107
    COMMA           shift and go to state 84


state 107

    (73) term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .

    DOT             reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    PLUS            reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    MINUS           reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    TIMES           reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    DIV             reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    IF              reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    EQ              reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    LE              reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    LT              reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    GE              reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    GT              reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    PTO             reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    TILDAEQ         reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    AND             reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    OR              reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    ARROW           reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    IFF             reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    ISA             reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    $end            reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    RPAREN          reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    COMMA           reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)
    ELSE            reduce using rule 73 (term -> LPAREN DOLLAR SYMBOL simplevars DOT fmla RPAREN LPAREN terms RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 15 resolved as shift
WARNING: shift/reduce conflict for DIV in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for EQ in state 15 resolved as shift
WARNING: shift/reduce conflict for LE in state 15 resolved as shift
WARNING: shift/reduce conflict for LT in state 15 resolved as shift
WARNING: shift/reduce conflict for GE in state 15 resolved as shift
WARNING: shift/reduce conflict for GT in state 15 resolved as shift
WARNING: shift/reduce conflict for PTO in state 15 resolved as shift
WARNING: shift/reduce conflict for TILDAEQ in state 15 resolved as shift
WARNING: shift/reduce conflict for AND in state 15 resolved as shift
WARNING: shift/reduce conflict for OR in state 15 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 15 resolved as shift
WARNING: shift/reduce conflict for IFF in state 15 resolved as shift
WARNING: shift/reduce conflict for ISA in state 15 resolved as shift
WARNING: shift/reduce conflict for DOT in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIV in state 65 resolved as shift
WARNING: shift/reduce conflict for IF in state 65 resolved as shift
WARNING: shift/reduce conflict for EQ in state 65 resolved as shift
WARNING: shift/reduce conflict for LE in state 65 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for GE in state 65 resolved as shift
WARNING: shift/reduce conflict for GT in state 65 resolved as shift
WARNING: shift/reduce conflict for PTO in state 65 resolved as shift
WARNING: shift/reduce conflict for TILDAEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 65 resolved as shift
WARNING: shift/reduce conflict for IFF in state 65 resolved as shift
WARNING: shift/reduce conflict for ISA in state 65 resolved as shift
WARNING: shift/reduce conflict for DOT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOT in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIV in state 69 resolved as shift
WARNING: shift/reduce conflict for IF in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for LE in state 69 resolved as shift
WARNING: shift/reduce conflict for LT in state 69 resolved as shift
WARNING: shift/reduce conflict for GE in state 69 resolved as shift
WARNING: shift/reduce conflict for GT in state 69 resolved as shift
WARNING: shift/reduce conflict for PTO in state 69 resolved as shift
WARNING: shift/reduce conflict for TILDAEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 69 resolved as shift
WARNING: shift/reduce conflict for IFF in state 69 resolved as shift
WARNING: shift/reduce conflict for ISA in state 69 resolved as shift
WARNING: shift/reduce conflict for DOT in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for EQ in state 77 resolved as shift
WARNING: shift/reduce conflict for LE in state 77 resolved as shift
WARNING: shift/reduce conflict for LT in state 77 resolved as shift
WARNING: shift/reduce conflict for GE in state 77 resolved as shift
WARNING: shift/reduce conflict for GT in state 77 resolved as shift
WARNING: shift/reduce conflict for PTO in state 77 resolved as shift
WARNING: shift/reduce conflict for TILDAEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 77 resolved as shift
WARNING: shift/reduce conflict for IFF in state 77 resolved as shift
WARNING: shift/reduce conflict for ISA in state 77 resolved as shift
WARNING: shift/reduce conflict for DOT in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIV in state 97 resolved as shift
WARNING: shift/reduce conflict for IF in state 97 resolved as shift
WARNING: shift/reduce conflict for EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for LE in state 97 resolved as shift
WARNING: shift/reduce conflict for LT in state 97 resolved as shift
WARNING: shift/reduce conflict for GE in state 97 resolved as shift
WARNING: shift/reduce conflict for GT in state 97 resolved as shift
WARNING: shift/reduce conflict for PTO in state 97 resolved as shift
WARNING: shift/reduce conflict for TILDAEQ in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 97 resolved as shift
WARNING: shift/reduce conflict for IFF in state 97 resolved as shift
WARNING: shift/reduce conflict for ISA in state 97 resolved as shift
WARNING: shift/reduce conflict for DOT in state 99 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 99 resolved as shift
WARNING: shift/reduce conflict for DIV in state 99 resolved as shift
WARNING: shift/reduce conflict for IF in state 99 resolved as shift
WARNING: shift/reduce conflict for EQ in state 99 resolved as shift
WARNING: shift/reduce conflict for LE in state 99 resolved as shift
WARNING: shift/reduce conflict for LT in state 99 resolved as shift
WARNING: shift/reduce conflict for GE in state 99 resolved as shift
WARNING: shift/reduce conflict for GT in state 99 resolved as shift
WARNING: shift/reduce conflict for PTO in state 99 resolved as shift
WARNING: shift/reduce conflict for TILDAEQ in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 99 resolved as shift
WARNING: shift/reduce conflict for IFF in state 99 resolved as shift
WARNING: shift/reduce conflict for ISA in state 99 resolved as shift
