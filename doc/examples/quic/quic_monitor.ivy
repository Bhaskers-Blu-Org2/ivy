#lang ivy1.7

include pcap
include order
include quic_packet
include quic_connection
include quic_deser

# This is a monitor that reads a file of QUIC packets in pcap format
# and tracks the protocol, checking that the packet sequence satisfies
# the protocol specification

# Compile the monitor like this:
#
# ivy_to_cpp target=repl isolate=iso_impl build=true quic_monitor.ivy

# Instantiate a pcap file reader with our packet type and deserializer

instance pc : pcap(quic_packet,quic_deser)

# Print a packet on stdout

action show_packet(src:ip.endpoint,dst:ip.endpoint,pkt:quic_packet)
import show_packet

# A call-back to handle for packets read from the file

action packet_event(src:ip.endpoint,dst:ip.endpoint,pkt:quic_packet) = {}

implement pc.handle(src:ip.endpoint,dst:ip.endpoint,pkt:quic_packet) {
    call show_packet(src,dst,pkt);     # print the packet
    call packet_event(src,dst,pkt);    # track the protocol
}

attribute radix=16       # print in hex

extract iso_impl = this  # extract everything
