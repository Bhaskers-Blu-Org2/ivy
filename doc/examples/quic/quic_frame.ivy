#lang ivy1.7

include collections
include order
include quic_stream

object frame = {

    # The base type for frames

    type this

    # Stream frames

    object stream = {

        # Stream frames are a variant of frame

        variant this of frame = struct {
        
            off : bool,        # is there an offset field
            len : bool,        # is there a length field
            fin : bool,        # is this the final offset

            id : stream_id,            # the stream ID
            offset : stream_pos,       # the stream offset (zero if ~off)
            length : stream_pos,       # length of the data
            data : stream_data         # the stream data
        }
    }

    object ack = {

        object block = {
            type this = struct {
                gap : pkt_num,       # gap, or zero for first block
                blocks : pkt_num     # number of packets in block - 1
            }
            instance idx : unbounded_sequence
            instance arr : array(idx,this)
        }

        # Ack frames are a variant of frame

        variant this of frame = struct {
        
            largest_acked   : pkt_num,    # largest acknowledged packet number
            ack_delay       : microsecs,  # delay of largest acked packet
            ack_blocks      : block.arr   # ack blocks
            
        }
    }

    instance idx : unbounded_sequence
    instance arr : array(idx,this)
}        
